//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.Phone.ServiceReference, version 3.7.0.0
// 
namespace PhoneApp.ServiceReference {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OPlayer", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DTO")]
    public partial class OPlayer : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int BrickField;
        
        private string ColorField;
        
        private int IronOreField;
        
        private bool MyTurnField;
        
        private int PlayerIdField;
        
        private string PlayerNameField;
        
        private int SheepField;
        
        private int WheatField;
        
        private int WoodField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Brick {
            get {
                return this.BrickField;
            }
            set {
                if ((this.BrickField.Equals(value) != true)) {
                    this.BrickField = value;
                    this.RaisePropertyChanged("Brick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IronOre {
            get {
                return this.IronOreField;
            }
            set {
                if ((this.IronOreField.Equals(value) != true)) {
                    this.IronOreField = value;
                    this.RaisePropertyChanged("IronOre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MyTurn {
            get {
                return this.MyTurnField;
            }
            set {
                if ((this.MyTurnField.Equals(value) != true)) {
                    this.MyTurnField = value;
                    this.RaisePropertyChanged("MyTurn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerId {
            get {
                return this.PlayerIdField;
            }
            set {
                if ((this.PlayerIdField.Equals(value) != true)) {
                    this.PlayerIdField = value;
                    this.RaisePropertyChanged("PlayerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayerName {
            get {
                return this.PlayerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerNameField, value) != true)) {
                    this.PlayerNameField = value;
                    this.RaisePropertyChanged("PlayerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sheep {
            get {
                return this.SheepField;
            }
            set {
                if ((this.SheepField.Equals(value) != true)) {
                    this.SheepField = value;
                    this.RaisePropertyChanged("Sheep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Wheat {
            get {
                return this.WheatField;
            }
            set {
                if ((this.WheatField.Equals(value) != true)) {
                    this.WheatField = value;
                    this.RaisePropertyChanged("Wheat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Wood {
            get {
                return this.WoodField;
            }
            set {
                if ((this.WoodField.Equals(value) != true)) {
                    this.WoodField = value;
                    this.RaisePropertyChanged("Wood");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OLobbyRoom", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DTO")]
    public partial class OLobbyRoom : object, System.ComponentModel.INotifyPropertyChanged {
        
        private PhoneApp.ServiceReference.OPlayer HostPlayerField;
        
        private System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OPlayer> PlayerListField;
        
        private PhoneApp.ServiceReference.OLobby TheLobbyField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PhoneApp.ServiceReference.OPlayer HostPlayer {
            get {
                return this.HostPlayerField;
            }
            set {
                if ((object.ReferenceEquals(this.HostPlayerField, value) != true)) {
                    this.HostPlayerField = value;
                    this.RaisePropertyChanged("HostPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OPlayer> PlayerList {
            get {
                return this.PlayerListField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerListField, value) != true)) {
                    this.PlayerListField = value;
                    this.RaisePropertyChanged("PlayerList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public PhoneApp.ServiceReference.OLobby TheLobby {
            get {
                return this.TheLobbyField;
            }
            set {
                if ((object.ReferenceEquals(this.TheLobbyField, value) != true)) {
                    this.TheLobbyField = value;
                    this.RaisePropertyChanged("TheLobby");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OLobby", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DTO")]
    public partial class OLobby : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int DiceNumField;
        
        private bool IsWaitingForPlayersField;
        
        private int LobbyIdField;
        
        private string LobbyNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DiceNum {
            get {
                return this.DiceNumField;
            }
            set {
                if ((this.DiceNumField.Equals(value) != true)) {
                    this.DiceNumField = value;
                    this.RaisePropertyChanged("DiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWaitingForPlayers {
            get {
                return this.IsWaitingForPlayersField;
            }
            set {
                if ((this.IsWaitingForPlayersField.Equals(value) != true)) {
                    this.IsWaitingForPlayersField = value;
                    this.RaisePropertyChanged("IsWaitingForPlayers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LobbyId {
            get {
                return this.LobbyIdField;
            }
            set {
                if ((this.LobbyIdField.Equals(value) != true)) {
                    this.LobbyIdField = value;
                    this.RaisePropertyChanged("LobbyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LobbyName {
            get {
                return this.LobbyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LobbyNameField, value) != true)) {
                    this.LobbyNameField = value;
                    this.RaisePropertyChanged("LobbyName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/CreateLobby", ReplyAction="http://tempuri.org/IService1/CreateLobbyResponse")]
        System.IAsyncResult BeginCreateLobby(PhoneApp.ServiceReference.OPlayer host, System.AsyncCallback callback, object asyncState);
        
        PhoneApp.ServiceReference.OLobbyRoom EndCreateLobby(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetAvailableLobbies", ReplyAction="http://tempuri.org/IService1/GetAvailableLobbiesResponse")]
        System.IAsyncResult BeginGetAvailableLobbies(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OLobby> EndGetAvailableLobbies(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetALobbyRoom", ReplyAction="http://tempuri.org/IService1/GetALobbyRoomResponse")]
        System.IAsyncResult BeginGetALobbyRoom(PhoneApp.ServiceReference.OLobby lob, System.AsyncCallback callback, object asyncState);
        
        PhoneApp.ServiceReference.OLobbyRoom EndGetALobbyRoom(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/GetAvailableLobbyRooms", ReplyAction="http://tempuri.org/IService1/GetAvailableLobbyRoomsResponse")]
        System.IAsyncResult BeginGetAvailableLobbyRooms(System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OLobbyRoom> EndGetAvailableLobbyRooms(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/StartPlay", ReplyAction="http://tempuri.org/IService1/StartPlayResponse")]
        System.IAsyncResult BeginStartPlay(PhoneApp.ServiceReference.OPlayer hostPlayer, System.AsyncCallback callback, object asyncState);
        
        void EndStartPlay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/SubscribeToLobbyRoom", ReplyAction="http://tempuri.org/IService1/SubscribeToLobbyRoomResponse")]
        System.IAsyncResult BeginSubscribeToLobbyRoom(PhoneApp.ServiceReference.OPlayer player, PhoneApp.ServiceReference.OLobbyRoom lobby, System.AsyncCallback callback, object asyncState);
        
        void EndSubscribeToLobbyRoom(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/MakePlayer", ReplyAction="http://tempuri.org/IService1/MakePlayerResponse")]
        System.IAsyncResult BeginMakePlayer(string username, System.AsyncCallback callback, object asyncState);
        
        PhoneApp.ServiceReference.OPlayer EndMakePlayer(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IService1/ChangeTurn", ReplyAction="http://tempuri.org/IService1/ChangeTurnResponse")]
        System.IAsyncResult BeginChangeTurn(PhoneApp.ServiceReference.OLobbyRoom lobbyRoom, System.AsyncCallback callback, object asyncState);
        
        void EndChangeTurn(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : PhoneApp.ServiceReference.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CreateLobbyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public CreateLobbyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PhoneApp.ServiceReference.OLobbyRoom Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PhoneApp.ServiceReference.OLobbyRoom)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAvailableLobbiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAvailableLobbiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OLobby> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OLobby>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetALobbyRoomCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetALobbyRoomCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PhoneApp.ServiceReference.OLobbyRoom Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PhoneApp.ServiceReference.OLobbyRoom)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetAvailableLobbyRoomsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetAvailableLobbyRoomsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OLobbyRoom> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OLobbyRoom>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MakePlayerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public MakePlayerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public PhoneApp.ServiceReference.OPlayer Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((PhoneApp.ServiceReference.OPlayer)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<PhoneApp.ServiceReference.IService1>, PhoneApp.ServiceReference.IService1 {
        
        private BeginOperationDelegate onBeginCreateLobbyDelegate;
        
        private EndOperationDelegate onEndCreateLobbyDelegate;
        
        private System.Threading.SendOrPostCallback onCreateLobbyCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAvailableLobbiesDelegate;
        
        private EndOperationDelegate onEndGetAvailableLobbiesDelegate;
        
        private System.Threading.SendOrPostCallback onGetAvailableLobbiesCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetALobbyRoomDelegate;
        
        private EndOperationDelegate onEndGetALobbyRoomDelegate;
        
        private System.Threading.SendOrPostCallback onGetALobbyRoomCompletedDelegate;
        
        private BeginOperationDelegate onBeginGetAvailableLobbyRoomsDelegate;
        
        private EndOperationDelegate onEndGetAvailableLobbyRoomsDelegate;
        
        private System.Threading.SendOrPostCallback onGetAvailableLobbyRoomsCompletedDelegate;
        
        private BeginOperationDelegate onBeginStartPlayDelegate;
        
        private EndOperationDelegate onEndStartPlayDelegate;
        
        private System.Threading.SendOrPostCallback onStartPlayCompletedDelegate;
        
        private BeginOperationDelegate onBeginSubscribeToLobbyRoomDelegate;
        
        private EndOperationDelegate onEndSubscribeToLobbyRoomDelegate;
        
        private System.Threading.SendOrPostCallback onSubscribeToLobbyRoomCompletedDelegate;
        
        private BeginOperationDelegate onBeginMakePlayerDelegate;
        
        private EndOperationDelegate onEndMakePlayerDelegate;
        
        private System.Threading.SendOrPostCallback onMakePlayerCompletedDelegate;
        
        private BeginOperationDelegate onBeginChangeTurnDelegate;
        
        private EndOperationDelegate onEndChangeTurnDelegate;
        
        private System.Threading.SendOrPostCallback onChangeTurnCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<CreateLobbyCompletedEventArgs> CreateLobbyCompleted;
        
        public event System.EventHandler<GetAvailableLobbiesCompletedEventArgs> GetAvailableLobbiesCompleted;
        
        public event System.EventHandler<GetALobbyRoomCompletedEventArgs> GetALobbyRoomCompleted;
        
        public event System.EventHandler<GetAvailableLobbyRoomsCompletedEventArgs> GetAvailableLobbyRoomsCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> StartPlayCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SubscribeToLobbyRoomCompleted;
        
        public event System.EventHandler<MakePlayerCompletedEventArgs> MakePlayerCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> ChangeTurnCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp.ServiceReference.IService1.BeginCreateLobby(PhoneApp.ServiceReference.OPlayer host, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginCreateLobby(host, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PhoneApp.ServiceReference.OLobbyRoom PhoneApp.ServiceReference.IService1.EndCreateLobby(System.IAsyncResult result) {
            return base.Channel.EndCreateLobby(result);
        }
        
        private System.IAsyncResult OnBeginCreateLobby(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneApp.ServiceReference.OPlayer host = ((PhoneApp.ServiceReference.OPlayer)(inValues[0]));
            return ((PhoneApp.ServiceReference.IService1)(this)).BeginCreateLobby(host, callback, asyncState);
        }
        
        private object[] OnEndCreateLobby(System.IAsyncResult result) {
            PhoneApp.ServiceReference.OLobbyRoom retVal = ((PhoneApp.ServiceReference.IService1)(this)).EndCreateLobby(result);
            return new object[] {
                    retVal};
        }
        
        private void OnCreateLobbyCompleted(object state) {
            if ((this.CreateLobbyCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CreateLobbyCompleted(this, new CreateLobbyCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CreateLobbyAsync(PhoneApp.ServiceReference.OPlayer host) {
            this.CreateLobbyAsync(host, null);
        }
        
        public void CreateLobbyAsync(PhoneApp.ServiceReference.OPlayer host, object userState) {
            if ((this.onBeginCreateLobbyDelegate == null)) {
                this.onBeginCreateLobbyDelegate = new BeginOperationDelegate(this.OnBeginCreateLobby);
            }
            if ((this.onEndCreateLobbyDelegate == null)) {
                this.onEndCreateLobbyDelegate = new EndOperationDelegate(this.OnEndCreateLobby);
            }
            if ((this.onCreateLobbyCompletedDelegate == null)) {
                this.onCreateLobbyCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCreateLobbyCompleted);
            }
            base.InvokeAsync(this.onBeginCreateLobbyDelegate, new object[] {
                        host}, this.onEndCreateLobbyDelegate, this.onCreateLobbyCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp.ServiceReference.IService1.BeginGetAvailableLobbies(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAvailableLobbies(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OLobby> PhoneApp.ServiceReference.IService1.EndGetAvailableLobbies(System.IAsyncResult result) {
            return base.Channel.EndGetAvailableLobbies(result);
        }
        
        private System.IAsyncResult OnBeginGetAvailableLobbies(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PhoneApp.ServiceReference.IService1)(this)).BeginGetAvailableLobbies(callback, asyncState);
        }
        
        private object[] OnEndGetAvailableLobbies(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OLobby> retVal = ((PhoneApp.ServiceReference.IService1)(this)).EndGetAvailableLobbies(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAvailableLobbiesCompleted(object state) {
            if ((this.GetAvailableLobbiesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAvailableLobbiesCompleted(this, new GetAvailableLobbiesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAvailableLobbiesAsync() {
            this.GetAvailableLobbiesAsync(null);
        }
        
        public void GetAvailableLobbiesAsync(object userState) {
            if ((this.onBeginGetAvailableLobbiesDelegate == null)) {
                this.onBeginGetAvailableLobbiesDelegate = new BeginOperationDelegate(this.OnBeginGetAvailableLobbies);
            }
            if ((this.onEndGetAvailableLobbiesDelegate == null)) {
                this.onEndGetAvailableLobbiesDelegate = new EndOperationDelegate(this.OnEndGetAvailableLobbies);
            }
            if ((this.onGetAvailableLobbiesCompletedDelegate == null)) {
                this.onGetAvailableLobbiesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAvailableLobbiesCompleted);
            }
            base.InvokeAsync(this.onBeginGetAvailableLobbiesDelegate, null, this.onEndGetAvailableLobbiesDelegate, this.onGetAvailableLobbiesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp.ServiceReference.IService1.BeginGetALobbyRoom(PhoneApp.ServiceReference.OLobby lob, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetALobbyRoom(lob, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PhoneApp.ServiceReference.OLobbyRoom PhoneApp.ServiceReference.IService1.EndGetALobbyRoom(System.IAsyncResult result) {
            return base.Channel.EndGetALobbyRoom(result);
        }
        
        private System.IAsyncResult OnBeginGetALobbyRoom(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneApp.ServiceReference.OLobby lob = ((PhoneApp.ServiceReference.OLobby)(inValues[0]));
            return ((PhoneApp.ServiceReference.IService1)(this)).BeginGetALobbyRoom(lob, callback, asyncState);
        }
        
        private object[] OnEndGetALobbyRoom(System.IAsyncResult result) {
            PhoneApp.ServiceReference.OLobbyRoom retVal = ((PhoneApp.ServiceReference.IService1)(this)).EndGetALobbyRoom(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetALobbyRoomCompleted(object state) {
            if ((this.GetALobbyRoomCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetALobbyRoomCompleted(this, new GetALobbyRoomCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetALobbyRoomAsync(PhoneApp.ServiceReference.OLobby lob) {
            this.GetALobbyRoomAsync(lob, null);
        }
        
        public void GetALobbyRoomAsync(PhoneApp.ServiceReference.OLobby lob, object userState) {
            if ((this.onBeginGetALobbyRoomDelegate == null)) {
                this.onBeginGetALobbyRoomDelegate = new BeginOperationDelegate(this.OnBeginGetALobbyRoom);
            }
            if ((this.onEndGetALobbyRoomDelegate == null)) {
                this.onEndGetALobbyRoomDelegate = new EndOperationDelegate(this.OnEndGetALobbyRoom);
            }
            if ((this.onGetALobbyRoomCompletedDelegate == null)) {
                this.onGetALobbyRoomCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetALobbyRoomCompleted);
            }
            base.InvokeAsync(this.onBeginGetALobbyRoomDelegate, new object[] {
                        lob}, this.onEndGetALobbyRoomDelegate, this.onGetALobbyRoomCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp.ServiceReference.IService1.BeginGetAvailableLobbyRooms(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetAvailableLobbyRooms(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OLobbyRoom> PhoneApp.ServiceReference.IService1.EndGetAvailableLobbyRooms(System.IAsyncResult result) {
            return base.Channel.EndGetAvailableLobbyRooms(result);
        }
        
        private System.IAsyncResult OnBeginGetAvailableLobbyRooms(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((PhoneApp.ServiceReference.IService1)(this)).BeginGetAvailableLobbyRooms(callback, asyncState);
        }
        
        private object[] OnEndGetAvailableLobbyRooms(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OLobbyRoom> retVal = ((PhoneApp.ServiceReference.IService1)(this)).EndGetAvailableLobbyRooms(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetAvailableLobbyRoomsCompleted(object state) {
            if ((this.GetAvailableLobbyRoomsCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetAvailableLobbyRoomsCompleted(this, new GetAvailableLobbyRoomsCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetAvailableLobbyRoomsAsync() {
            this.GetAvailableLobbyRoomsAsync(null);
        }
        
        public void GetAvailableLobbyRoomsAsync(object userState) {
            if ((this.onBeginGetAvailableLobbyRoomsDelegate == null)) {
                this.onBeginGetAvailableLobbyRoomsDelegate = new BeginOperationDelegate(this.OnBeginGetAvailableLobbyRooms);
            }
            if ((this.onEndGetAvailableLobbyRoomsDelegate == null)) {
                this.onEndGetAvailableLobbyRoomsDelegate = new EndOperationDelegate(this.OnEndGetAvailableLobbyRooms);
            }
            if ((this.onGetAvailableLobbyRoomsCompletedDelegate == null)) {
                this.onGetAvailableLobbyRoomsCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetAvailableLobbyRoomsCompleted);
            }
            base.InvokeAsync(this.onBeginGetAvailableLobbyRoomsDelegate, null, this.onEndGetAvailableLobbyRoomsDelegate, this.onGetAvailableLobbyRoomsCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp.ServiceReference.IService1.BeginStartPlay(PhoneApp.ServiceReference.OPlayer hostPlayer, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginStartPlay(hostPlayer, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneApp.ServiceReference.IService1.EndStartPlay(System.IAsyncResult result) {
            base.Channel.EndStartPlay(result);
        }
        
        private System.IAsyncResult OnBeginStartPlay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneApp.ServiceReference.OPlayer hostPlayer = ((PhoneApp.ServiceReference.OPlayer)(inValues[0]));
            return ((PhoneApp.ServiceReference.IService1)(this)).BeginStartPlay(hostPlayer, callback, asyncState);
        }
        
        private object[] OnEndStartPlay(System.IAsyncResult result) {
            ((PhoneApp.ServiceReference.IService1)(this)).EndStartPlay(result);
            return null;
        }
        
        private void OnStartPlayCompleted(object state) {
            if ((this.StartPlayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.StartPlayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void StartPlayAsync(PhoneApp.ServiceReference.OPlayer hostPlayer) {
            this.StartPlayAsync(hostPlayer, null);
        }
        
        public void StartPlayAsync(PhoneApp.ServiceReference.OPlayer hostPlayer, object userState) {
            if ((this.onBeginStartPlayDelegate == null)) {
                this.onBeginStartPlayDelegate = new BeginOperationDelegate(this.OnBeginStartPlay);
            }
            if ((this.onEndStartPlayDelegate == null)) {
                this.onEndStartPlayDelegate = new EndOperationDelegate(this.OnEndStartPlay);
            }
            if ((this.onStartPlayCompletedDelegate == null)) {
                this.onStartPlayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnStartPlayCompleted);
            }
            base.InvokeAsync(this.onBeginStartPlayDelegate, new object[] {
                        hostPlayer}, this.onEndStartPlayDelegate, this.onStartPlayCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp.ServiceReference.IService1.BeginSubscribeToLobbyRoom(PhoneApp.ServiceReference.OPlayer player, PhoneApp.ServiceReference.OLobbyRoom lobby, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSubscribeToLobbyRoom(player, lobby, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneApp.ServiceReference.IService1.EndSubscribeToLobbyRoom(System.IAsyncResult result) {
            base.Channel.EndSubscribeToLobbyRoom(result);
        }
        
        private System.IAsyncResult OnBeginSubscribeToLobbyRoom(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneApp.ServiceReference.OPlayer player = ((PhoneApp.ServiceReference.OPlayer)(inValues[0]));
            PhoneApp.ServiceReference.OLobbyRoom lobby = ((PhoneApp.ServiceReference.OLobbyRoom)(inValues[1]));
            return ((PhoneApp.ServiceReference.IService1)(this)).BeginSubscribeToLobbyRoom(player, lobby, callback, asyncState);
        }
        
        private object[] OnEndSubscribeToLobbyRoom(System.IAsyncResult result) {
            ((PhoneApp.ServiceReference.IService1)(this)).EndSubscribeToLobbyRoom(result);
            return null;
        }
        
        private void OnSubscribeToLobbyRoomCompleted(object state) {
            if ((this.SubscribeToLobbyRoomCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SubscribeToLobbyRoomCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SubscribeToLobbyRoomAsync(PhoneApp.ServiceReference.OPlayer player, PhoneApp.ServiceReference.OLobbyRoom lobby) {
            this.SubscribeToLobbyRoomAsync(player, lobby, null);
        }
        
        public void SubscribeToLobbyRoomAsync(PhoneApp.ServiceReference.OPlayer player, PhoneApp.ServiceReference.OLobbyRoom lobby, object userState) {
            if ((this.onBeginSubscribeToLobbyRoomDelegate == null)) {
                this.onBeginSubscribeToLobbyRoomDelegate = new BeginOperationDelegate(this.OnBeginSubscribeToLobbyRoom);
            }
            if ((this.onEndSubscribeToLobbyRoomDelegate == null)) {
                this.onEndSubscribeToLobbyRoomDelegate = new EndOperationDelegate(this.OnEndSubscribeToLobbyRoom);
            }
            if ((this.onSubscribeToLobbyRoomCompletedDelegate == null)) {
                this.onSubscribeToLobbyRoomCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSubscribeToLobbyRoomCompleted);
            }
            base.InvokeAsync(this.onBeginSubscribeToLobbyRoomDelegate, new object[] {
                        player,
                        lobby}, this.onEndSubscribeToLobbyRoomDelegate, this.onSubscribeToLobbyRoomCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp.ServiceReference.IService1.BeginMakePlayer(string username, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginMakePlayer(username, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        PhoneApp.ServiceReference.OPlayer PhoneApp.ServiceReference.IService1.EndMakePlayer(System.IAsyncResult result) {
            return base.Channel.EndMakePlayer(result);
        }
        
        private System.IAsyncResult OnBeginMakePlayer(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string username = ((string)(inValues[0]));
            return ((PhoneApp.ServiceReference.IService1)(this)).BeginMakePlayer(username, callback, asyncState);
        }
        
        private object[] OnEndMakePlayer(System.IAsyncResult result) {
            PhoneApp.ServiceReference.OPlayer retVal = ((PhoneApp.ServiceReference.IService1)(this)).EndMakePlayer(result);
            return new object[] {
                    retVal};
        }
        
        private void OnMakePlayerCompleted(object state) {
            if ((this.MakePlayerCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.MakePlayerCompleted(this, new MakePlayerCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void MakePlayerAsync(string username) {
            this.MakePlayerAsync(username, null);
        }
        
        public void MakePlayerAsync(string username, object userState) {
            if ((this.onBeginMakePlayerDelegate == null)) {
                this.onBeginMakePlayerDelegate = new BeginOperationDelegate(this.OnBeginMakePlayer);
            }
            if ((this.onEndMakePlayerDelegate == null)) {
                this.onEndMakePlayerDelegate = new EndOperationDelegate(this.OnEndMakePlayer);
            }
            if ((this.onMakePlayerCompletedDelegate == null)) {
                this.onMakePlayerCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnMakePlayerCompleted);
            }
            base.InvokeAsync(this.onBeginMakePlayerDelegate, new object[] {
                        username}, this.onEndMakePlayerDelegate, this.onMakePlayerCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult PhoneApp.ServiceReference.IService1.BeginChangeTurn(PhoneApp.ServiceReference.OLobbyRoom lobbyRoom, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginChangeTurn(lobbyRoom, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        void PhoneApp.ServiceReference.IService1.EndChangeTurn(System.IAsyncResult result) {
            base.Channel.EndChangeTurn(result);
        }
        
        private System.IAsyncResult OnBeginChangeTurn(object[] inValues, System.AsyncCallback callback, object asyncState) {
            PhoneApp.ServiceReference.OLobbyRoom lobbyRoom = ((PhoneApp.ServiceReference.OLobbyRoom)(inValues[0]));
            return ((PhoneApp.ServiceReference.IService1)(this)).BeginChangeTurn(lobbyRoom, callback, asyncState);
        }
        
        private object[] OnEndChangeTurn(System.IAsyncResult result) {
            ((PhoneApp.ServiceReference.IService1)(this)).EndChangeTurn(result);
            return null;
        }
        
        private void OnChangeTurnCompleted(object state) {
            if ((this.ChangeTurnCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ChangeTurnCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ChangeTurnAsync(PhoneApp.ServiceReference.OLobbyRoom lobbyRoom) {
            this.ChangeTurnAsync(lobbyRoom, null);
        }
        
        public void ChangeTurnAsync(PhoneApp.ServiceReference.OLobbyRoom lobbyRoom, object userState) {
            if ((this.onBeginChangeTurnDelegate == null)) {
                this.onBeginChangeTurnDelegate = new BeginOperationDelegate(this.OnBeginChangeTurn);
            }
            if ((this.onEndChangeTurnDelegate == null)) {
                this.onEndChangeTurnDelegate = new EndOperationDelegate(this.OnEndChangeTurn);
            }
            if ((this.onChangeTurnCompletedDelegate == null)) {
                this.onChangeTurnCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnChangeTurnCompleted);
            }
            base.InvokeAsync(this.onBeginChangeTurnDelegate, new object[] {
                        lobbyRoom}, this.onEndChangeTurnDelegate, this.onChangeTurnCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override PhoneApp.ServiceReference.IService1 CreateChannel() {
            return new Service1ClientChannel(this);
        }
        
        private class Service1ClientChannel : ChannelBase<PhoneApp.ServiceReference.IService1>, PhoneApp.ServiceReference.IService1 {
            
            public Service1ClientChannel(System.ServiceModel.ClientBase<PhoneApp.ServiceReference.IService1> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginCreateLobby(PhoneApp.ServiceReference.OPlayer host, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = host;
                System.IAsyncResult _result = base.BeginInvoke("CreateLobby", _args, callback, asyncState);
                return _result;
            }
            
            public PhoneApp.ServiceReference.OLobbyRoom EndCreateLobby(System.IAsyncResult result) {
                object[] _args = new object[0];
                PhoneApp.ServiceReference.OLobbyRoom _result = ((PhoneApp.ServiceReference.OLobbyRoom)(base.EndInvoke("CreateLobby", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAvailableLobbies(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAvailableLobbies", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OLobby> EndGetAvailableLobbies(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OLobby> _result = ((System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OLobby>)(base.EndInvoke("GetAvailableLobbies", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetALobbyRoom(PhoneApp.ServiceReference.OLobby lob, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = lob;
                System.IAsyncResult _result = base.BeginInvoke("GetALobbyRoom", _args, callback, asyncState);
                return _result;
            }
            
            public PhoneApp.ServiceReference.OLobbyRoom EndGetALobbyRoom(System.IAsyncResult result) {
                object[] _args = new object[0];
                PhoneApp.ServiceReference.OLobbyRoom _result = ((PhoneApp.ServiceReference.OLobbyRoom)(base.EndInvoke("GetALobbyRoom", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginGetAvailableLobbyRooms(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetAvailableLobbyRooms", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OLobbyRoom> EndGetAvailableLobbyRooms(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OLobbyRoom> _result = ((System.Collections.ObjectModel.ObservableCollection<PhoneApp.ServiceReference.OLobbyRoom>)(base.EndInvoke("GetAvailableLobbyRooms", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginStartPlay(PhoneApp.ServiceReference.OPlayer hostPlayer, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = hostPlayer;
                System.IAsyncResult _result = base.BeginInvoke("StartPlay", _args, callback, asyncState);
                return _result;
            }
            
            public void EndStartPlay(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("StartPlay", _args, result);
            }
            
            public System.IAsyncResult BeginSubscribeToLobbyRoom(PhoneApp.ServiceReference.OPlayer player, PhoneApp.ServiceReference.OLobbyRoom lobby, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[2];
                _args[0] = player;
                _args[1] = lobby;
                System.IAsyncResult _result = base.BeginInvoke("SubscribeToLobbyRoom", _args, callback, asyncState);
                return _result;
            }
            
            public void EndSubscribeToLobbyRoom(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("SubscribeToLobbyRoom", _args, result);
            }
            
            public System.IAsyncResult BeginMakePlayer(string username, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = username;
                System.IAsyncResult _result = base.BeginInvoke("MakePlayer", _args, callback, asyncState);
                return _result;
            }
            
            public PhoneApp.ServiceReference.OPlayer EndMakePlayer(System.IAsyncResult result) {
                object[] _args = new object[0];
                PhoneApp.ServiceReference.OPlayer _result = ((PhoneApp.ServiceReference.OPlayer)(base.EndInvoke("MakePlayer", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginChangeTurn(PhoneApp.ServiceReference.OLobbyRoom lobbyRoom, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = lobbyRoom;
                System.IAsyncResult _result = base.BeginInvoke("ChangeTurn", _args, callback, asyncState);
                return _result;
            }
            
            public void EndChangeTurn(System.IAsyncResult result) {
                object[] _args = new object[0];
                base.EndInvoke("ChangeTurn", _args, result);
            }
        }
    }
}
