//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebApplication1.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OPlayer", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DTO")]
    [System.SerializableAttribute()]
    public partial class OPlayer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BrickField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ColorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IronOreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool MyTurnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PlayerIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PlayerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SheepField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WheatField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int WoodField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Brick {
            get {
                return this.BrickField;
            }
            set {
                if ((this.BrickField.Equals(value) != true)) {
                    this.BrickField = value;
                    this.RaisePropertyChanged("Brick");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Color {
            get {
                return this.ColorField;
            }
            set {
                if ((object.ReferenceEquals(this.ColorField, value) != true)) {
                    this.ColorField = value;
                    this.RaisePropertyChanged("Color");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IronOre {
            get {
                return this.IronOreField;
            }
            set {
                if ((this.IronOreField.Equals(value) != true)) {
                    this.IronOreField = value;
                    this.RaisePropertyChanged("IronOre");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool MyTurn {
            get {
                return this.MyTurnField;
            }
            set {
                if ((this.MyTurnField.Equals(value) != true)) {
                    this.MyTurnField = value;
                    this.RaisePropertyChanged("MyTurn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PlayerId {
            get {
                return this.PlayerIdField;
            }
            set {
                if ((this.PlayerIdField.Equals(value) != true)) {
                    this.PlayerIdField = value;
                    this.RaisePropertyChanged("PlayerId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PlayerName {
            get {
                return this.PlayerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerNameField, value) != true)) {
                    this.PlayerNameField = value;
                    this.RaisePropertyChanged("PlayerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sheep {
            get {
                return this.SheepField;
            }
            set {
                if ((this.SheepField.Equals(value) != true)) {
                    this.SheepField = value;
                    this.RaisePropertyChanged("Sheep");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Wheat {
            get {
                return this.WheatField;
            }
            set {
                if ((this.WheatField.Equals(value) != true)) {
                    this.WheatField = value;
                    this.RaisePropertyChanged("Wheat");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Wood {
            get {
                return this.WoodField;
            }
            set {
                if ((this.WoodField.Equals(value) != true)) {
                    this.WoodField = value;
                    this.RaisePropertyChanged("Wood");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OLobbyRoom", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DTO")]
    [System.SerializableAttribute()]
    public partial class OLobbyRoom : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication1.ServiceReference1.OPlayer HostPlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication1.ServiceReference1.OPlayer[] PlayerListField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication1.ServiceReference1.OLobby TheLobbyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication1.ServiceReference1.OPlayer HostPlayer {
            get {
                return this.HostPlayerField;
            }
            set {
                if ((object.ReferenceEquals(this.HostPlayerField, value) != true)) {
                    this.HostPlayerField = value;
                    this.RaisePropertyChanged("HostPlayer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication1.ServiceReference1.OPlayer[] PlayerList {
            get {
                return this.PlayerListField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerListField, value) != true)) {
                    this.PlayerListField = value;
                    this.RaisePropertyChanged("PlayerList");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication1.ServiceReference1.OLobby TheLobby {
            get {
                return this.TheLobbyField;
            }
            set {
                if ((object.ReferenceEquals(this.TheLobbyField, value) != true)) {
                    this.TheLobbyField = value;
                    this.RaisePropertyChanged("TheLobby");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OLobby", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DTO")]
    [System.SerializableAttribute()]
    public partial class OLobby : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int DiceNumField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsWaitingForPlayersField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LobbyIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LobbyNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication1.ServiceReference1.ORoad[] RoadsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication1.ServiceReference1.OSettlement[] SettlementsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int DiceNum {
            get {
                return this.DiceNumField;
            }
            set {
                if ((this.DiceNumField.Equals(value) != true)) {
                    this.DiceNumField = value;
                    this.RaisePropertyChanged("DiceNum");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsWaitingForPlayers {
            get {
                return this.IsWaitingForPlayersField;
            }
            set {
                if ((this.IsWaitingForPlayersField.Equals(value) != true)) {
                    this.IsWaitingForPlayersField = value;
                    this.RaisePropertyChanged("IsWaitingForPlayers");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int LobbyId {
            get {
                return this.LobbyIdField;
            }
            set {
                if ((this.LobbyIdField.Equals(value) != true)) {
                    this.LobbyIdField = value;
                    this.RaisePropertyChanged("LobbyId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LobbyName {
            get {
                return this.LobbyNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LobbyNameField, value) != true)) {
                    this.LobbyNameField = value;
                    this.RaisePropertyChanged("LobbyName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication1.ServiceReference1.ORoad[] Roads {
            get {
                return this.RoadsField;
            }
            set {
                if ((object.ReferenceEquals(this.RoadsField, value) != true)) {
                    this.RoadsField = value;
                    this.RaisePropertyChanged("Roads");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication1.ServiceReference1.OSettlement[] Settlements {
            get {
                return this.SettlementsField;
            }
            set {
                if ((object.ReferenceEquals(this.SettlementsField, value) != true)) {
                    this.SettlementsField = value;
                    this.RaisePropertyChanged("Settlements");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ORoad", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DTO")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WebApplication1.ServiceReference1.OSettlement))]
    public partial class ORoad : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImageUrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private WebApplication1.ServiceReference1.OPlayer OwnerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Drawing.Point PositionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RoadIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImageUrl {
            get {
                return this.ImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ImageUrlField, value) != true)) {
                    this.ImageUrlField = value;
                    this.RaisePropertyChanged("ImageUrl");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public WebApplication1.ServiceReference1.OPlayer Owner {
            get {
                return this.OwnerField;
            }
            set {
                if ((object.ReferenceEquals(this.OwnerField, value) != true)) {
                    this.OwnerField = value;
                    this.RaisePropertyChanged("Owner");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Drawing.Point Position {
            get {
                return this.PositionField;
            }
            set {
                if ((this.PositionField.Equals(value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RoadId {
            get {
                return this.RoadIdField;
            }
            set {
                if ((this.RoadIdField.Equals(value) != true)) {
                    this.RoadIdField = value;
                    this.RaisePropertyChanged("RoadId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="OSettlement", Namespace="http://schemas.datacontract.org/2004/07/WcfService.DTO")]
    [System.SerializableAttribute()]
    public partial class OSettlement : WebApplication1.ServiceReference1.ORoad {
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool UpgradedField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Upgraded {
            get {
                return this.UpgradedField;
            }
            set {
                if ((this.UpgradedField.Equals(value) != true)) {
                    this.UpgradedField = value;
                    this.RaisePropertyChanged("Upgraded");
                }
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateLobby", ReplyAction="http://tempuri.org/IService1/CreateLobbyResponse")]
        WebApplication1.ServiceReference1.OLobbyRoom CreateLobby(WebApplication1.ServiceReference1.OPlayer host);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateLobby", ReplyAction="http://tempuri.org/IService1/CreateLobbyResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.OLobbyRoom> CreateLobbyAsync(WebApplication1.ServiceReference1.OPlayer host);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAvailableLobbies", ReplyAction="http://tempuri.org/IService1/GetAvailableLobbiesResponse")]
        WebApplication1.ServiceReference1.OLobby[] GetAvailableLobbies();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAvailableLobbies", ReplyAction="http://tempuri.org/IService1/GetAvailableLobbiesResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.OLobby[]> GetAvailableLobbiesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetALobbyRoom", ReplyAction="http://tempuri.org/IService1/GetALobbyRoomResponse")]
        WebApplication1.ServiceReference1.OLobbyRoom GetALobbyRoom(WebApplication1.ServiceReference1.OLobby lob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetALobbyRoom", ReplyAction="http://tempuri.org/IService1/GetALobbyRoomResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.OLobbyRoom> GetALobbyRoomAsync(WebApplication1.ServiceReference1.OLobby lob);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAvailableLobbyRooms", ReplyAction="http://tempuri.org/IService1/GetAvailableLobbyRoomsResponse")]
        WebApplication1.ServiceReference1.OLobbyRoom[] GetAvailableLobbyRooms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAvailableLobbyRooms", ReplyAction="http://tempuri.org/IService1/GetAvailableLobbyRoomsResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.OLobbyRoom[]> GetAvailableLobbyRoomsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/StartPlay", ReplyAction="http://tempuri.org/IService1/StartPlayResponse")]
        void StartPlay(WebApplication1.ServiceReference1.OPlayer hostPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/StartPlay", ReplyAction="http://tempuri.org/IService1/StartPlayResponse")]
        System.Threading.Tasks.Task StartPlayAsync(WebApplication1.ServiceReference1.OPlayer hostPlayer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SubscribeToLobbyRoom", ReplyAction="http://tempuri.org/IService1/SubscribeToLobbyRoomResponse")]
        void SubscribeToLobbyRoom(WebApplication1.ServiceReference1.OPlayer player, WebApplication1.ServiceReference1.OLobbyRoom lobby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SubscribeToLobbyRoom", ReplyAction="http://tempuri.org/IService1/SubscribeToLobbyRoomResponse")]
        System.Threading.Tasks.Task SubscribeToLobbyRoomAsync(WebApplication1.ServiceReference1.OPlayer player, WebApplication1.ServiceReference1.OLobbyRoom lobby);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePlayer", ReplyAction="http://tempuri.org/IService1/UpdatePlayerResponse")]
        void UpdatePlayer(WebApplication1.ServiceReference1.OPlayer playa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdatePlayer", ReplyAction="http://tempuri.org/IService1/UpdatePlayerResponse")]
        System.Threading.Tasks.Task UpdatePlayerAsync(WebApplication1.ServiceReference1.OPlayer playa);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MakePlayer", ReplyAction="http://tempuri.org/IService1/MakePlayerResponse")]
        WebApplication1.ServiceReference1.OPlayer MakePlayer(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MakePlayer", ReplyAction="http://tempuri.org/IService1/MakePlayerResponse")]
        System.Threading.Tasks.Task<WebApplication1.ServiceReference1.OPlayer> MakePlayerAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangeTurn", ReplyAction="http://tempuri.org/IService1/ChangeTurnResponse")]
        void ChangeTurn(WebApplication1.ServiceReference1.OLobbyRoom lobbyRoom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangeTurn", ReplyAction="http://tempuri.org/IService1/ChangeTurnResponse")]
        System.Threading.Tasks.Task ChangeTurnAsync(WebApplication1.ServiceReference1.OLobbyRoom lobbyRoom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateGame", ReplyAction="http://tempuri.org/IService1/UpdateGameResponse")]
        void UpdateGame(WebApplication1.ServiceReference1.OLobbyRoom lobbyRoom);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/UpdateGame", ReplyAction="http://tempuri.org/IService1/UpdateGameResponse")]
        System.Threading.Tasks.Task UpdateGameAsync(WebApplication1.ServiceReference1.OLobbyRoom lobbyRoom);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WebApplication1.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WebApplication1.ServiceReference1.IService1>, WebApplication1.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WebApplication1.ServiceReference1.OLobbyRoom CreateLobby(WebApplication1.ServiceReference1.OPlayer host) {
            return base.Channel.CreateLobby(host);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.OLobbyRoom> CreateLobbyAsync(WebApplication1.ServiceReference1.OPlayer host) {
            return base.Channel.CreateLobbyAsync(host);
        }
        
        public WebApplication1.ServiceReference1.OLobby[] GetAvailableLobbies() {
            return base.Channel.GetAvailableLobbies();
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.OLobby[]> GetAvailableLobbiesAsync() {
            return base.Channel.GetAvailableLobbiesAsync();
        }
        
        public WebApplication1.ServiceReference1.OLobbyRoom GetALobbyRoom(WebApplication1.ServiceReference1.OLobby lob) {
            return base.Channel.GetALobbyRoom(lob);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.OLobbyRoom> GetALobbyRoomAsync(WebApplication1.ServiceReference1.OLobby lob) {
            return base.Channel.GetALobbyRoomAsync(lob);
        }
        
        public WebApplication1.ServiceReference1.OLobbyRoom[] GetAvailableLobbyRooms() {
            return base.Channel.GetAvailableLobbyRooms();
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.OLobbyRoom[]> GetAvailableLobbyRoomsAsync() {
            return base.Channel.GetAvailableLobbyRoomsAsync();
        }
        
        public void StartPlay(WebApplication1.ServiceReference1.OPlayer hostPlayer) {
            base.Channel.StartPlay(hostPlayer);
        }
        
        public System.Threading.Tasks.Task StartPlayAsync(WebApplication1.ServiceReference1.OPlayer hostPlayer) {
            return base.Channel.StartPlayAsync(hostPlayer);
        }
        
        public void SubscribeToLobbyRoom(WebApplication1.ServiceReference1.OPlayer player, WebApplication1.ServiceReference1.OLobbyRoom lobby) {
            base.Channel.SubscribeToLobbyRoom(player, lobby);
        }
        
        public System.Threading.Tasks.Task SubscribeToLobbyRoomAsync(WebApplication1.ServiceReference1.OPlayer player, WebApplication1.ServiceReference1.OLobbyRoom lobby) {
            return base.Channel.SubscribeToLobbyRoomAsync(player, lobby);
        }
        
        public void UpdatePlayer(WebApplication1.ServiceReference1.OPlayer playa) {
            base.Channel.UpdatePlayer(playa);
        }
        
        public System.Threading.Tasks.Task UpdatePlayerAsync(WebApplication1.ServiceReference1.OPlayer playa) {
            return base.Channel.UpdatePlayerAsync(playa);
        }
        
        public WebApplication1.ServiceReference1.OPlayer MakePlayer(string username) {
            return base.Channel.MakePlayer(username);
        }
        
        public System.Threading.Tasks.Task<WebApplication1.ServiceReference1.OPlayer> MakePlayerAsync(string username) {
            return base.Channel.MakePlayerAsync(username);
        }
        
        public void ChangeTurn(WebApplication1.ServiceReference1.OLobbyRoom lobbyRoom) {
            base.Channel.ChangeTurn(lobbyRoom);
        }
        
        public System.Threading.Tasks.Task ChangeTurnAsync(WebApplication1.ServiceReference1.OLobbyRoom lobbyRoom) {
            return base.Channel.ChangeTurnAsync(lobbyRoom);
        }
        
        public void UpdateGame(WebApplication1.ServiceReference1.OLobbyRoom lobbyRoom) {
            base.Channel.UpdateGame(lobbyRoom);
        }
        
        public System.Threading.Tasks.Task UpdateGameAsync(WebApplication1.ServiceReference1.OLobbyRoom lobbyRoom) {
            return base.Channel.UpdateGameAsync(lobbyRoom);
        }
    }
}
